mutate(total = if_else(spp == "Pipiens", -total, total)) %>%
mutate(pos = factor(if_else(positive_pools > 0, 1, 0), levels = c(1,0))) %>%
ggplot(aes(x = week, y = total, size =  pos, shape = spp, color = pos)) +
geom_hline(yintercept = 0, color = "grey80", alpha = 0.8) +
geom_point(alpha = 0.7) +
scale_size_manual(values = c("1" = 1.8, "0" = 1.1)) +
scale_color_manual(values = c("1" = "red", "0" = "blue")) +
#scale_color_gradient(low = "blue", high = "red") + #for positive_pools
scale_y_continuous( limits = c(-y_limit, y_limit), labels = function(x) abs(x)) +
scale_x_continuous(breaks = seq(min(df$week), max(df$week), by = 3)) +
ylab("Mosquitoes per Trap") +
theme_classic() +
theme(axis.text.x = element_text(angle = 90),
axis.title.x = element_blank()) +
facet_grid(zone~year)
#df should be the database pool level data
fun_p_trap = function(df, yr_min, zone_filter, y_limit){
df %>%
filter(year > yr_min) %>%
filter(zone %in% zone_filter) %>%
group_by(year, week, zone, trap_id, spp) %>%
reframe(total = sum(total),
positive_pools = sum(test_code, na.rm = T),
n_pools = n()) %>%
mutate(total = if_else(spp == "Pipiens", -total, total)) %>%
mutate(pos = factor(if_else(positive_pools > 0, 1, 0), levels = c(1,0))) %>%
ggplot(aes(x = week, y = total, size =  pos, shape = spp, color = pos)) +
geom_hline(yintercept = 0, color = "grey80", alpha = 0.8) +
geom_point(alpha = 0.7) +
scale_size_manual(values = c("1" = 1.8, "0" = 1.1)) +
scale_color_manual(values = c("1" = "red", "0" = "blue")) +
#scale_color_gradient(low = "blue", high = "red") + #for positive_pools
scale_y_continuous( limits = c(-y_limit, y_limit), labels = function(x) abs(x)) +
scale_x_continuous(breaks = seq(min(df$week), max(df$week), by = 3)) +
ylab("Mosquitoes per Trap") +
theme_classic() +
theme(axis.text.x = element_text(angle = 90),
axis.title.x = element_blank()) +
facet_grid(zone~year)
}
p_trap =  fun_p_trap(df = database_input, 2020, fc_zones, y_limit = 500)
p_trap
#df should be the database pool level data
fun_p_trap = function(df, yr_min, zone_filter, y_limit){
df %>%
filter(year >= yr_min) %>%
filter(zone %in% zone_filter) %>%
group_by(year, week, zone, trap_id, spp) %>%
reframe(total = sum(total),
positive_pools = sum(test_code, na.rm = T),
n_pools = n()) %>%
mutate(total = if_else(spp == "Pipiens", -total, total)) %>%
mutate(pos = factor(if_else(positive_pools > 0, 1, 0), levels = c(1,0))) %>%
ggplot(aes(x = week, y = total, size =  pos, shape = spp, color = pos)) +
geom_hline(yintercept = 0, color = "grey80", alpha = 0.8) +
geom_point(alpha = 0.7) +
scale_size_manual(values = c("1" = 1.8, "0" = 1.1)) +
scale_color_manual(values = c("1" = "red", "0" = "blue")) +
#scale_color_gradient(low = "blue", high = "red") + #for positive_pools
scale_y_continuous( limits = c(-y_limit, y_limit), labels = function(x) abs(x)) +
scale_x_continuous(breaks = seq(min(df$week), max(df$week), by = 3)) +
ylab("Mosquitoes per Trap") +
theme_classic() +
theme(axis.text.x = element_text(angle = 90),
axis.title.x = element_blank()) +
facet_grid(zone~year)
}
p_trap =  fun_p_trap(df = database_input, 2019, fc_zones, y_limit = 500)
p_trap
ggsave(plot = p_trap, filename = file.path(dir_output, "p_trap.png"),
width = 10, height = 10, units = "in")
)
ggsave(plot = p_trap, filename = file.path(dir_output, "p_trap.png"),
width = 11, height = 8, units = "in")
data_yr_stat_no_current = data_input %>%
filter(year != year_filter) %>%
filter(zone %in% fc_zones) %>%
filter(spp == "All") %>%
filter(year = "historical") %>%
group_by(year) %>%
summarise(total_pools_tested = sum(n_pools),
total_pos_pools = sum(n_pos_pools),
total_mosq_tested = sum(mosq),
avg_abund = round(mean(abund),2),
avg_pir = round(mean(pir),4),
avg_vi = round(mean(vi),2),
.groups = "drop"
) %>%
mutate(pos_pool_pct = round(total_pos_pools/total_pools_tested,2)) %>%
select(year, total_mosq_tested, total_pools_tested, total_pos_pools, pos_pool_pct,
total_pools_tested, avg_abund, avg_pir, avg_vi)
data_yr_stat_no_current = data_input %>%
filter(year != year_filter) %>%
filter(zone %in% fc_zones) %>%
filter(spp == "All") %>%
mutate(year = "historical") %>%
group_by(year) %>%
summarise(total_pools_tested = sum(n_pools),
total_pos_pools = sum(n_pos_pools),
total_mosq_tested = sum(mosq),
avg_abund = round(mean(abund),2),
avg_pir = round(mean(pir),4),
avg_vi = round(mean(vi),2),
.groups = "drop"
) %>%
mutate(pos_pool_pct = round(total_pos_pools/total_pools_tested,2)) %>%
select(year, total_mosq_tested, total_pools_tested, total_pos_pools, pos_pool_pct,
total_pools_tested, avg_abund, avg_pir, avg_vi)
View(data_yr_stat_no_current)
data_yr_stat_no_current = data_input %>%
filter(year != year_filter) %>%
filter(zone %in% fc_zones) %>%
filter(spp == "All") %>%
mutate(year = "historical") %>%
group_by(year) %>%
summarise(total_pools_tested = mean(n_pools),
total_pos_pools = mean(n_pos_pools),
total_mosq_tested = mean(mosq),
avg_abund = round(mean(abund),2),
avg_pir = round(mean(pir),4),
avg_vi = round(mean(vi),2),
.groups = "drop"
) %>%
mutate(pos_pool_pct = round(total_pos_pools/total_pools_tested,2)) %>%
select(year, total_mosq_tested, total_pools_tested, total_pos_pools, pos_pool_pct,
total_pools_tested, avg_abund, avg_pir, avg_vi)
#table for report
data_yr_stat = data_input %>%
filter(year > 2014) %>%
filter(zone %in% fc_zones) %>%
filter(spp == "All") %>%
group_by(year) %>%
summarise(total_pools_tested = sum(n_pools),
total_pos_pools = sum(n_pos_pools),
total_mosq_tested = sum(mosq),
avg_abund = round(mean(abund),2),
avg_pir = round(mean(pir),4),
avg_vi = round(mean(vi),2),
.groups = "drop"
) %>%
mutate(pos_pool_pct = round(total_pos_pools/total_pools_tested,2)) %>%
select(year, total_mosq_tested, total_pools_tested, total_pos_pools, pos_pool_pct,
total_pools_tested, avg_abund, avg_pir, avg_vi)
#calc abundance without Boulder bc of trap biases
abund_no_bc = data_input %>%
filter(year > 2014) %>%
filter(zone != "BC") %>%
group_by(year) %>%
summarise(avg_abund = round(mean(abund),2))
data_yr_stat = data_yr_stat %>%
mutate(avg_abund = abund_no_bc$avg_abund)
data_yr_stat_no_current = data_input %>%
filter(year != year_filter) %>%
filter(zone %in% fc_zones) %>%
filter(spp == "All") %>%
mutate(year = "historical") %>%
group_by(year) %>%
summarise(total_pools_tested = mean(n_pools),
total_pos_pools = mean(n_pos_pools),
total_mosq_tested = mean(mosq),
avg_abund = round(mean(abund),2),
avg_pir = round(mean(pir),4),
avg_vi = round(mean(vi),2),
.groups = "drop"
) %>%
mutate(pos_pool_pct = round(total_pos_pools/total_pools_tested,2)) %>%
select(year, total_mosq_tested, total_pools_tested, total_pos_pools, pos_pool_pct,
total_pools_tested, avg_abund, avg_pir, avg_vi)
data_yr_stat = data_yr_stat %>%
rbind(data_yr_stat_no_current)
write.csv(data_yr_stat, file.path(dir_output, "data_yr_stat.csv"), row.names = F)
View(data_yr_stat_no_current)
data_yr_stat_no_current = data_yr_stat %>%
filter(year != year_filter) %>%
mutate_if(round(is.numeric(mean)))
data_yr_stat_no_current = data_yr_stat %>%
filter(year != year_filter) %>%
mutate_if(~round(is.numeric(mean(.x))))
data_yr_stat_no_current = data_yr_stat %>%
filter(year != year_filter) %>%
mutate(year = character(year)) %>%
mutate_if(~round(is.numeric(mean(.x))))
data_yr_stat_no_current = data_yr_stat %>%
filter(year != year_filter) %>%
mutate(year = factor(year)) %>%
mutate_if(~round(is.numeric(mean(.x))))
data_yr_stat_no_current = data_yr_stat %>%
filter(year != year_filter) %>%
mutate(year = factor(year)) %>%
mutate(across(where(is.numeric), ~ round(mean(.x),2)))
data_yr_stat = data_yr_stat %>%
rbind(data_yr_stat_no_current)
View(data_yr_stat)
#table for report
data_yr_stat = data_input %>%
filter(year > 2014) %>%
filter(zone %in% fc_zones) %>%
filter(spp == "All") %>%
group_by(year) %>%
summarise(total_pools_tested = sum(n_pools),
total_pos_pools = sum(n_pos_pools),
total_mosq_tested = sum(mosq),
avg_abund = round(mean(abund),2),
avg_pir = round(mean(pir),4),
avg_vi = round(mean(vi),2),
.groups = "drop"
) %>%
mutate(pos_pool_pct = round(total_pos_pools/total_pools_tested,2)) %>%
select(year, total_mosq_tested, total_pools_tested, total_pos_pools, pos_pool_pct,
total_pools_tested, avg_abund, avg_pir, avg_vi)
#calc abundance without Boulder bc of trap biases
abund_no_bc = data_input %>%
filter(year > 2014) %>%
filter(zone != "BC") %>%
group_by(year) %>%
summarise(avg_abund = round(mean(abund),2))
data_yr_stat = data_yr_stat %>%
mutate(avg_abund = abund_no_bc$avg_abund)
data_yr_stat_no_current = data_yr_stat %>%
filter(year != year_filter) %>%
mutate(year = factor(year)) %>%
mutate(across(where(is.numeric), ~ round(mean(.x),2)))
data_yr_stat = data_yr_stat %>%
rbind(data_yr_stat_no_current)
write.csv(data_yr_stat, file.path(dir_output, "data_yr_stat.csv"), row.names = F)
View(data_yr_stat)
data_yr_stat = data_input %>%
filter(year > 2014) %>%
filter(zone %in% fc_zones) %>%
filter(spp == "All") %>%
group_by(year) %>%
summarise(total_pools_tested = sum(n_pools),
total_pos_pools = sum(n_pos_pools),
total_mosq_tested = sum(mosq),
avg_abund = round(mean(abund),2),
avg_pir = round(mean(pir),4),
avg_vi = round(mean(vi),2),
.groups = "drop"
) %>%
mutate(pos_pool_pct = round(total_pos_pools/total_pools_tested,2)) %>%
select(year, total_mosq_tested, total_pools_tested, total_pos_pools, pos_pool_pct,
total_pools_tested, avg_abund, avg_pir, avg_vi)
#calc abundance without Boulder bc of trap biases
abund_no_bc = data_input %>%
filter(year > 2014) %>%
filter(zone != "BC") %>%
group_by(year) %>%
summarise(avg_abund = round(mean(abund),2))
data_yr_stat = data_yr_stat %>%
mutate(avg_abund = abund_no_bc$avg_abund)
data_yr_stat_no_current = data_yr_stat %>%
filter(year != year_filter) %>%
mutate(year = factor(year)) %>%
mutate(across(where(is.numeric), ~ round(mean(.x),2)))
data_yr_stat = data_yr_stat %>%
rbind(data_yr_stat_no_current)
data_yr_stat = data_input %>%
filter(year > 2014) %>%
filter(zone %in% fc_zones) %>%
filter(spp == "All") %>%
group_by(year) %>%
summarise(total_pools_tested = sum(n_pools),
total_pos_pools = sum(n_pos_pools),
total_mosq_tested = sum(mosq),
avg_abund = round(mean(abund),2),
avg_pir = round(mean(pir),4),
avg_vi = round(mean(vi),2),
.groups = "drop"
) %>%
mutate(pos_pool_pct = round(total_pos_pools/total_pools_tested,2)) %>%
select(year, total_mosq_tested, total_pools_tested, total_pos_pools, pos_pool_pct,
total_pools_tested, avg_abund, avg_pir, avg_vi)
#calc abundance without Boulder bc of trap biases
abund_no_bc = data_input %>%
filter(year > 2014) %>%
filter(zone != "BC") %>%
group_by(year) %>%
summarise(avg_abund = round(mean(abund),2))
data_yr_stat = data_yr_stat %>%
mutate(avg_abund = abund_no_bc$avg_abund)
data_yr_stat_no_current = data_yr_stat %>%
filter(year != year_filter) %>%
mutate(year = factor(year)) %>%
mutate(across(where(is.numeric), ~ round(mean(.x),2)))
data_yr_stat2 = data_yr_stat %>%
rbind(data_yr_stat_no_current)
View(data_yr_stat2)
data_yr_stat_no_current = data_yr_stat %>%
filter(year != year_filter) %>%
mutate(year = factor(year)) %>%
summarise(across(where(is.numeric), ~ round(mean(.x),2)))
View(data_yr_stat_no_current)
data_yr_stat_no_current = data_yr_stat %>%
filter(year != year_filter) %>%
mutate(year = "15-23") %>%
group_by(year) %>%
summarise(across(where(is.numeric), ~ round(mean(.x),2)))
data_yr_stat2 = data_yr_stat %>%
rbind(data_yr_stat_no_current)
View(data_yr_stat2)
write.csv(data_yr_stat2, file.path(dir_output, "data_yr_stat.csv"), row.names = F)
data_yr_stat_no_current = data_yr_stat %>%
filter(year != year_filter) %>%
mutate(year = "15-23") %>%
group_by(year) %>%
summarise(across(where(is.numeric), ~ round(mean(.x),4)))
data_yr_stat2 = data_yr_stat %>%
rbind(data_yr_stat_no_current)
write.csv(data_yr_stat2, file.path(dir_output, "data_yr_stat.csv"), row.names = F)
#<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
#-------------------------------S A V E   Y E A R L Y--------------------------------------
#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
#<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
#table for report
data_yr_stat = data_input %>%
filter(year > 2014) %>%
filter(zone %in% fc_zones) %>%
filter(spp == "All") %>%
group_by(year) %>%
summarise(total_pools_tested = sum(n_pools),
total_pos_pools = sum(n_pos_pools),
total_mosq_tested = sum(mosq),
avg_abund = round(mean(abund),2),
avg_pir = round(mean(pir),4),
avg_vi = round(mean(vi),2),
max_vi = round(max(vi), 2),
.groups = "drop"
) %>%
mutate(pos_pool_pct = round(total_pos_pools/total_pools_tested,2)) %>%
select(year, total_mosq_tested, total_pools_tested, total_pos_pools, pos_pool_pct,
total_pools_tested, avg_abund, avg_pir, avg_vi)
View(data_yr_stat)
#<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
#-------------------------------S A V E   Y E A R L Y--------------------------------------
#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
#<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
#table for report
data_yr_stat = data_input %>%
filter(year > 2014) %>%
filter(zone %in% fc_zones) %>%
filter(spp == "All") %>%
group_by(year) %>%
summarise(total_pools_tested = sum(n_pools),
total_pos_pools = sum(n_pos_pools),
total_mosq_tested = sum(mosq),
avg_abund = round(mean(abund),2),
avg_pir = round(mean(pir),4),
avg_vi = round(mean(vi),2),
max_vi = round(max(vi), 2),
.groups = "drop"
) %>%
mutate(pos_pool_pct = round(total_pos_pools/total_pools_tested,2)) %>%
select(year, total_mosq_tested, total_pools_tested, total_pos_pools, pos_pool_pct,
total_pools_tested, avg_abund, avg_pir, avg_vi)
View(data_yr_stat)
#<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
#-------------------------------S A V E   Y E A R L Y--------------------------------------
#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
#<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
#table for report
data_yr_stat = data_input %>%
filter(year > 2014) %>%
filter(zone %in% fc_zones) %>%
filter(spp == "All") %>%
group_by(year) %>%
summarise(total_pools_tested = sum(n_pools),
total_pos_pools = sum(n_pos_pools),
total_mosq_tested = sum(mosq),
avg_abund = round(mean(abund),2),
avg_pir = round(mean(pir),4),
avg_vi = round(mean(vi),2),
max_vi = round(max(vi), 2),
.groups = "drop"
) %>%
mutate(pos_pool_pct = round(total_pos_pools/total_pools_tested,2)) %>%
select(year, total_mosq_tested, total_pools_tested, total_pos_pools, pos_pool_pct,
total_pools_tested, avg_abund, avg_pir, avg_vi)
#calc abundance without Boulder bc of trap biases
abund_no_bc = data_input %>%
filter(year > 2014) %>%
filter(zone != "BC") %>%
group_by(year) %>%
summarise(avg_abund = round(mean(abund),2))
data_yr_stat = data_yr_stat %>%
mutate(avg_abund = abund_no_bc$avg_abund)
data_yr_stat_no_current = data_yr_stat %>%
filter(year != year_filter) %>%
mutate(year = "15-23") %>%
group_by(year) %>%
summarise(across(where(is.numeric), ~ round(mean(.x),4)))
View(data_yr_stat)
#<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
#-------------------------------S A V E   Y E A R L Y--------------------------------------
#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
#<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
#table for report
data_yr_stat = data_input %>%
filter(year > 2014) %>%
filter(zone %in% fc_zones) %>%
filter(spp == "All") %>%
group_by(year) %>%
summarise(total_pools_tested = sum(n_pools),
total_pos_pools = sum(n_pos_pools),
total_mosq_tested = sum(mosq),
avg_abund = round(mean(abund),2),
avg_pir = round(mean(pir),4),
avg_vi = round(mean(vi),2),
max_vi = round(max(vi), 2),
.groups = "drop"
) %>%
mutate(pos_pool_pct = round(total_pos_pools/total_pools_tested,2)) %>%
select(year, total_mosq_tested, total_pools_tested, total_pos_pools, pos_pool_pct,
total_pools_tested, avg_abund, avg_pir, avg_vi, max_vi)
#<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
#-------------------------------S A V E   Y E A R L Y--------------------------------------
#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
#<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
#table for report
data_yr_stat = data_input %>%
filter(year > 2014) %>%
filter(zone %in% fc_zones) %>%
filter(spp == "All") %>%
group_by(year) %>%
summarise(total_pools_tested = sum(n_pools),
total_pos_pools = sum(n_pos_pools),
total_mosq_tested = sum(mosq),
avg_abund = round(mean(abund),2),
avg_pir = round(mean(pir),4),
avg_vi = round(mean(vi),2),
max_vi = round(max(vi), 2),
.groups = "drop"
) %>%
mutate(pos_pool_pct = round(total_pos_pools/total_pools_tested,2)) %>%
select(year, total_mosq_tested, total_pools_tested, total_pos_pools, pos_pool_pct,
total_pools_tested, avg_abund, avg_pir, avg_vi, max_vi)
#calc abundance without Boulder bc of trap biases
abund_no_bc = data_input %>%
filter(year > 2014) %>%
filter(zone != "BC") %>%
group_by(year) %>%
summarise(avg_abund = round(mean(abund),2))
data_yr_stat = data_yr_stat %>%
mutate(avg_abund = abund_no_bc$avg_abund)
View(data_yr_stat)
data_yr_stat_no_current = data_yr_stat %>%
filter(year != year_filter) %>%
mutate(year = "15-23") %>%
group_by(year) %>%
summarise(across(where(is.numeric), ~ round(mean(.x),4)))
data_yr_stat2 = data_yr_stat %>%
rbind(data_yr_stat_no_current)
write.csv(data_yr_stat2, file.path(dir_output, "data_yr_stat.csv"), row.names = F)
p_hx_current0 = p_abund + p_pir /p_vi +
#plot_annotation(caption = c(description)) +
plot_layout(#widths =c(3,3,3,1),
guides = "collect") & theme(legend.position = 'bottom',
legend.title = element_blank())
p_hx_current0
p_hx_current0 = (p_abund + p_pir) / p_vi +
#plot_annotation(caption = c(description)) +
plot_layout(#widths =c(3,3,3,1),
guides = "collect") & theme(legend.position = 'bottom',
legend.title = element_blank())
p_hx_current0
ggsave("3_output/hx_plot_all.png", p_hx_current0, height = 12, width = 8, units = "in")
ggsave("3_output/hx_plot_all.png", p_hx_current0, height = 8, width = 10, units = "in")
#df is the data_zone_wk data
fun_heat_map = function(df, value) {
df %>% #should be zone level data
ggplot(aes(x = week, y = zone, fill = {{value}})) +
geom_tile(color = "gray20") + # Adds white grid lines
scale_fill_gradient(low = "white", high = "red", na.value = "gray") +
facet_wrap(~ year, ncol = 2) + # Facets for each "Variable" like Vi
scale_x_continuous(breaks = seq(min(data_input0$week), max(data_input0$week), by = 1)) +
theme_classic() +
theme(
panel.grid = element_blank(),   # Remove grid lines
strip.background = element_blank(), # Remove facet strip background
strip.text = element_text(size = 10) # Customize facet labels
)
}
p_vi_heat =   data_input0 %>%
filter(year > 2014) %>%
filter(zone %in% fc_zones) %>%
fun_heat_map(vi)
p_vi_heat
ggsave(plot = p_vi_heat, filename = "3_output/p_vi_heat.png",
width = 10, height = 8, units = "in")
ggsave(plot = p_vi_heat, filename = "3_output/p_vi_heat.png",
width = 10, height = 7, units = "in")
p_hx_current0 = p_abund + p_pir+  p_vi +
#plot_annotation(caption = c(description)) +
plot_layout(#widths =c(3,3,3,1),
guides = "collect") & theme(legend.position = 'bottom',
legend.title = element_blank())
p_hx_current0
ggsave("3_output/hx_plot_all.png", p_hx_current0, height = 7, width = 10, units = "in")
